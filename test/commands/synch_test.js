/* global describe, it */

var Synch = require('../../lib/commands/synch');
var I18nline = require('../../lib/main');
var assert = require('chai').assert;
var fs = require('fs');
var path = require('path');
var temp = require('temp');
var rimraf = require('rimraf');

describe('Synch', function() {
  describe(".run", function() {
    it("should synch all internationalization files", function() {
      var tmpDir = temp.mkdirSync();
      I18nline.set('basePath', tmpDir, function() {
        I18nline.set('out', 'out', function() {
          var cmd = new Synch({silent: true});
          cmd.checkFiles = function() {
            this.translations = {translations: {i18n: "Iñtërnâtiônàlizætiøn"}};
          };
          cmd.run();
          // should have generated default.json
          assert.deepEqual(
            {en: {i18n: "Iñtërnâtiônàlizætiøn"}},
            JSON.parse(fs.readFileSync(path.join(cmd.out, 'default.json')))
          );
          // should have generated en.json
          assert.deepEqual(
            {en: {i18n: "Iñtërnâtiônàlizætiøn"}},
            JSON.parse(fs.readFileSync(path.join(cmd.out, 'en.json')))
          );
          // should have generated index.js
          assert.doesNotThrow(function(){
            var js = fs.readFileSync(path.join(cmd.out, 'index.js')).toString();
            assert(js.startsWith('// Generated by i18nline'));
          });
        });
      });
      rimraf.sync(tmpDir);
    });
  });
});

